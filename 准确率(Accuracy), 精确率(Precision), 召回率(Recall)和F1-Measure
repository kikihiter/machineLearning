https://www.cnblogs.com/sddai/p/5696870.html

返回主页
赏月斋
慎终如始 宁静致远
博客园
首页
新随笔
联系
订阅
管理
随笔 - 480  文章 - 0  评论 - 31
准确率(Accuracy), 精确率(Precision), 召回率(Recall)和F1-Measure
yu Code 15 Comments 
机器学习(ML),自然语言处理(NLP),信息检索(IR)等领域,评估(Evaluation)是一个必要的 工作,而其评价指标往往有如下几点:准确率(Accuracy),精确率(Precision),召回率(Recall)和F1-Measure。(注： 相对来说，IR 的 ground truth 很多时候是一个 Ordered List, 而不是一个 Bool 类型的 Unordered Collection，在都找到的情况下，排在第三名还是第四名损失并不是很大，而排在第一名和第一百名，虽然都是“找到了”，但是意义是不一样的，因此 更多可能适用于 MAP 之类评估指标。)

本文将简单介绍其中几个概念。中文中这几个评价指标翻译各有不同，所以一般情况下推荐使用英文。

现在我先假定一个具体场景作为例子。

假如某个班级有男生80人,女生20人,共计100人.目标是找出所有女生.
现在某人挑选出50个人,其中20人是女生,另外还错误的把30个男生也当作女生挑选出来了.
作为评估者的你需要来评估(evaluation)下他的工作

首先我们可以计算准确率(accuracy),其定义是: 对于给定的测试数据集，分类器正确分类的样本数与总样本数之比。也就是损失函数是0-1损失时测试数据集上的准确率[1].

这样说听起来有点抽象，简单说就是，前面的场景中，实际情况是那个班级有男的和女的两类，某人(也就是定义中所说的分类器)他又把班级中的人分为男女两类。accuracy需要得到的是此君分正确的人占总人数的比例。很容易，我们可以得到:他把其中70(20女+50男)人判定正确了,而总人数是100人，所以它的accuracy就是70 %(70 / 100).

由准确率，我们的确可以在一些场合，从某种意义上得到一个分类器是否有效，但它并不总是能有效的评价一个分类器的工作。举个例子,google抓取 了argcv 100个页面，而它索引中共有10,000,000个页面,随机抽一个页面，分类下,这是不是argcv的页面呢?如果以accuracy来判断我的工 作，那我会把所有的页面都判断为"不是argcv的页面",因为我这样效率非常高(return false,一句话),而accuracy已经到了99.999%(9,999,900/10,000,000),完爆其它很多分类器辛辛苦苦算的值,而我这个算法显然不是需求期待的,那怎么解决呢?这就是precision,recall和f1-measure出场的时间了.

在说precision,recall和f1-measure之前,我们需要先需要定义TP,FN,FP,TN四种分类情况.
按照前面例子,我们需要从一个班级中的人中寻找所有女生,如果把这个任务当成一个分类器的话,那么女生就是我们需要的,而男生不是,所以我们称女生为"正类",而男生为"负类".

 	相关(Relevant),正类	无关(NonRelevant),负类
被检索到(Retrieved)	true positives(TP 正类判定为正类,例子中就是正确的判定"这位是女生")	false positives(FP 负类判定为正类,"存伪",例子中就是分明是男生却判断为女生,当下伪娘横行,这个错常有人犯)
未被检索到(Not Retrieved)	false negatives(FN 正类判定为负类,"去真",例子中就是,分明是女生,这哥们却判断为男生--梁山伯同学犯的错就是这个)	true negatives(TN 负类判定为负类,也就是一个男生被判断为男生,像我这样的纯爷们一准儿就会在此处)
通过这张表,我们可以很容易得到这几个值:
TP=20
FP=30
FN=0
TN=50

精确率(precision)的公式是P = \frac{TP}{TP+FP},它计算的是所有"正确被检索的item(TP)"占所有"实际被检索到的(TP+FP)"的比例.

在例子中就是希望知道此君得到的所有人中,正确的人(也就是女生)占有的比例.所以其precision也就是40%(20女生/(20女生+30误判为女生的男生)).

召回率(recall)的公式是R = \frac{TP}{TP+FN},它计算的是所有"正确被检索的item(TP)"占所有"应该检索到的item(TP+FN)"的比例。

在例子中就是希望知道此君得到的女生占本班中所有女生的比例,所以其recall也就是100%(20女生/(20女生+ 0 误判为男生的女生))

F1值就是精确值和召回率的调和均值,也就是
\frac{2}{F_1} = \frac{1}{P} + \frac{1}{R} 
调整下也就是
F_1 = \frac{2PR}{P+R} = \frac{2TP}{2TP + FP + FN} 

例子中 F1-measure 也就是约为 57.143%(\frac{2 * 0.4 * 1}{0.4 + 1}).

需要说明的是,有人[2]列了这样个公式
F_a = \frac{(a^2 + 1 )PR}{a^2(P+R)}
将F-measure一般化.

F1-measure认为精确率和召回率的权重是一样的,但有些场景下,我们可能认为精确率会更加重要,调整参数a,使用Fa-measure可以帮助我们更好的evaluate结果.

话虽然很多,其实实现非常轻松,点击此处可以看到我的一个简单的实现.

References
[1] 李航. 统计学习方法[M]. 北京:清华大学出版社,2012.
[2] 准确率（Precision）、召回率（Recall）以及综合评价指标（F1-Measure ）

==================================================

自己理解 + 我老师的说法就是，准确率就是找得对，召回率就是找得全。

大概就是你问问一个模型，这堆东西是不是某个类的时候，准确率就是 它说是，这东西就确实是的概率吧，召回率就是， 它说是，但它漏说了（1-召回率）这么多。

==================================================

在信息检索、分类体系中，有一系列的指标，搞清楚这些指标对于评价检索和分类性能非常重要，因此最近根据网友的博客做了一个汇总。

准确率、召回率、F1

信息检索、分类、识别、翻译等领域两个最基本指标是召回率(Recall Rate)和准确率(Precision Rate)，召回率也叫查全率，准确率也叫查准率，概念公式:

             召回率(Recall)      =  系统检索到的相关文件 / 系统所有相关的文件总数

             准确率(Precision) =  系统检索到的相关文件 / 系统所有检索到的文件总数

图示表示如下：






  A：             （搜到的也想要的）
B：检索到的，但是不相关的          （搜到的但没用的）
C：未检索到的，但却是相关的        （没搜到，然而实际上想要的）
D：未检索到的，也不相关的          （没搜到也没用的）
 

注意：准确率和召回率是互相影响的，理想情况下肯定是做到两者都高，但是一般情况下准确率高、召回率就低，召回率低、准确率高，当然如果两者都低，那是什么地方出问题了。一般情况，用不同的阀值，统计出一组不同阀值下的精确率和召回率，如下图：

 



 

如果是做搜索，那就是保证召回的情况下提升准确率；如果做疾病监测、反垃圾，则是保准确率的条件下，提升召回。

所以，在两者都要求高的情况下，可以用F1来衡量。

F1 =  * P * R / (P + R)  
 

公式基本上就是这样，但是如何算图1中的A、B、C、D呢？这需要人工标注，人工标注数据需要较多时间且枯燥，如果仅仅是做实验可以用用现成的语料。当然，还有一个办法，找个一个比较成熟的算法作为基准，用该算法的结果作为样本来进行比照，这个方法也有点问题，如果有现成的很好的算法，就不用再研究了。

 

AP和mAP(mean Average Precision)

mAP是为解决P，R，F-measure的单点值局限性的。为了得到 一个能够反映全局性能的指标，可以看考察下图，其中两条曲线(方块点与圆点)分布对应了两个检索系统的准确率-召回率曲线

 

可以看出，虽然两个系统的性能曲线有所交叠但是以圆点标示的系统的性能在绝大多数情况下要远好于用方块标示的系统。

从中我们可以 发现一点，如果一个系统的性能较好，其曲线应当尽可能的向上突出。

更加具体的，曲线与坐标轴之间的面积应当越大。

最理想的系统， 其包含的面积应当是1，而所有系统的包含的面积都应当大于0。这就是用以评价信息检索系统的最常用性能指标，平均准确率mAP其规范的定义如下:(其中P，R分别为准确率与召回率)



ROC和AUC
ROC和AUC是评价分类器的指标，上面第一个图的ABCD仍然使用，只是需要稍微变换。



回到ROC上来，ROC的全名叫做Receiver Operating Characteristic。

ROC关注两个指标

   True Positive Rate ( TPR )  = TP / [ TP + FN] ，TPR代表能将正例分对的概率

   False Positive Rate( FPR ) = FP / [ FP + TN] ，FPR代表将负例错分为正例的概率

在ROC 空间中，每个点的横坐标是FPR，纵坐标是TPR，这也就描绘了分类器在TP（真正的正例）和FP（错误的正例）间的trade-off。ROC的主要分 析工具是一个画在ROC空间的曲线——ROC curve。我们知道，对于二值分类问题，实例的值往往是连续值，我们通过设定一个阈值，将实例分类到正类或者负类（比如大于阈值划分为正类）。因此我们 可以变化阈值，根据不同的阈值进行分类，根据分类结果计算得到ROC空间中相应的点，连接这些点就形成ROC curve。ROC curve经过（0,0）（1,1），实际上(0, 0)和(1, 1)连线形成的ROC curve实际上代表的是一个随机分类器。一般情况下，这个曲线都应该处于(0, 0)和(1, 1)连线的上方。如图所示。


用ROC curve来表示分类器的performance很直观好用。可是，人们总是希望能有一个数值来标志分类器的好坏。

于是Area Under roc Curve(AUC)就出现了。顾名思义，AUC的值就是处于ROC curve下方的那部分面积的大小。通常，AUC的值介于0.5到1.0之间，较大的AUC代表了较好的Performance。
AUC计算工具：

http://mark.goadrich.com/programs/AUC/

P/R和ROC是两个不同的评价指标和计算方式，一般情况下，检索用前者，分类、识别等用后者。

参考链接：

http://www.vanjor.org/blog/2010/11/recall-precision/

http://bubblexc.com/y2011/148/

http://wenku.baidu.com/view/ef91f011cc7931b765ce15ec.html


：Recall，又称“查全率”——还是查全率好记，也更能体现其实质意义。
准确率


“召回率”与“准确率”虽然没有必然的关系（从上面公式中可以看到），在实际应用中，是相互制约的。要根据实际需求，找到一个平衡点。
当 我们问检索系统某一件事的所有细节时（输入检索query查询词），Recall指：检索系统能“回忆”起那些事的多少细节，通俗来讲就是“回忆的能 力”。“能回忆起来的细节数” 除以 “系统知道这件事的所有细节”，就是“记忆率”，也就是recall——召回率。简单的，也可以理解为查全率。

________________________________________________________________

在人工智能中，混淆矩阵（confusion matrix）是可视化工具，特别用于监督学习，在无监督学习一般叫做匹配矩阵。

如有150个样本数据，这些数据分成3类，每类50个。分类结束后得到的混淆矩阵为：

　　	预测
类1
类2
类3
实际
　　	
类1
43
5
2
类2
2
45
3
类3
0
1
49
每一行之和为50，表示50个样本，
第一行说明类1的50个样本有43个分类正确，5个错分为类2，2个错分为类3

分类: 数学
好文要顶 关注我 收藏该文    
stardsd
关注 - 2
粉丝 - 163
+加关注
4 0
« 上一篇：交叉验证 Cross-validation
» 下一篇：网络虚拟化—互联网的下一波革命
posted @ 2016-07-22 19:19 stardsd 阅读(88296) 评论(0) 编辑 收藏
刷新评论刷新页面返回顶部
注册用户登录后才能发表评论，请 登录 或 注册，访问网站首页。
最新IT新闻:
· 眼胀、眼干、见风流泪，随便花几十块买个眼药水有用吗？
· 趣头条招股书没有说的秘密
· 百度智能小程序将在四季度全面开放申请
· 自如甲醛房质检报告提供方：只有治理资质无检测资质
· 桑德伯格：Facebook盈利女强人 技术革命让她转变
» 更多新闻...
最新知识库文章:
· 为什么说 Java 程序员必须掌握 Spring Boot ？
· 在学习中，有一个比掌握知识更重要的能力
· 如何招到一个靠谱的程序员
· 一个故事看懂“区块链”
· 被踢出去的用户
» 更多知识库文章...
公告
昵称：stardsd
园龄：2年4个月
粉丝：163
关注：2
+加关注
<	2018年9月	>
日	一	二	三	四	五	六
26	27	28	29	30	31	1
2	3	4	5	6	7	8
9	10	11	12	13	14	15
16	17	18	19	20	21	22
23	24	25	26	27	28	29
30	1	2	3	4	5	6
搜索

 找找看
常用链接
我的随笔
我的评论
我的参与
最新评论
我的标签
最新随笔
1. YAML文件简介
2. 动态规划 问题集锦与讲解
3. 区块链客户端应用程序
4. 链代码 单元测试
5. 使用 Golang 编写链代码 (v0.6 )
6. Kubernetes
7. Variational Inference
8. WSL(Windows Subsystem for Linux)的安装与使用
9. 生成模型（Generative Model）和 判别模型（Discriminative Model）
10. 赏月斋源码共享计划 第三期
随笔分类(656)
C++(30)
C语言(28)
Hadoop(12)
Java(26)
JavaScript(2)
Matlab(34)
Python(5)
SAS/SPSS
TensorFlow(3)
WEB
博弈论(2)
操作系统(43)
大数据(29)
互联网资讯(13)
机器学习(41)
计算机网络(122)
经济与管理(6)
论文写作(16)
区块链(21)
数据结构与算法(14)
数据库(9)
数据挖掘(40)
数学(58)
通信原理(23)
图像处理(8)
网络安全(12)
虚拟化(15)
英语学习(3)
云计算(37)
职场(4)
随笔档案(480)
2018年9月 (12) 2018年8月 (25) 2018年7月 (23) 2018年6月 (3) 2018年5月 (7) 2018年4月 (7) 2018年3月 (18) 2018年2月 (4) 2018年1月 (8) 2017年12月 (1) 2017年11月 (5) 2017年10月 (8) 2017年9月 (7) 2017年8月 (1) 2017年7月 (1) 2017年6月 (5) 2017年5月 (14) 2017年4月 (2) 2017年3月 (8) 2017年2月 (6) 2017年1月 (25) 2016年12月 (23) 2016年11月 (28) 2016年10月 (63) 2016年9月 (22) 2016年8月 (37) 2016年7月 (55) 2016年6月 (1) 2016年5月 (17) 2016年4月 (28) 2016年3月 (15) 2015年7月 (1)
相册(21)
数据挖掘工具(21)
积分与排名
积分 -	295007
排名 -	725
最新评论
1. Re:ICP算法（Iterative Closest Point迭代最近点算法）
@o_less_girl你好，根据您的需求，相关资料如下，希望可以帮到您：...
--stardsd
2. Re:ICP算法（Iterative Closest Point迭代最近点算法）
FindClosestPointSet(data,P,Q);  的主程序可以分享一下吗？谢谢
--o_less_girl
3. Re:ICP算法（Iterative Closest Point迭代最近点算法）
楼主，最近应课题需要做三维点集匹配，着实不太懂c++,楼主可以分享一下代码吗？我的邮箱是1584765119@qq.com谢谢
--o_less_girl
4. Re:ICP算法（Iterative Closest Point迭代最近点算法）
楼主您好，请问可以直接求对应最近点吗？
--o_less_girl
5. Re:Git: Push rejected 的解决方案
关于报错“fatal: Authentication failed” 的解决方案If you enabled two-factor authentication in your Github acco......
--stardsd
6. Re:史密斯（smith）圆图讲解
生动
！
--苏沐央
7. Re:么正矩阵(酉矩阵)
666 还搞量子计算
--刘琪
8. Re:二维码详解（QR Code）
楼主，illustrator是可以做的，但如果预先设定好小黑点图形，然后系统或者程序自动替换的那种，是不是更好。
--轩坊
9. Re:Statistical Artifact (error)
统计假象
--stardsd
10. Re:二维码详解（QR Code）
@轩坊一种方法是使用AI设计软件，网上有很多相关教程。...
--stardsd
11. Re:二维码详解（QR Code）
厉害了，那怎么把里边的小黑快换成别的图形呢？从而实现艺术二维码的效果。
--轩坊
12. Re:服务器三大体系SMP、NUMA、MPP介绍
写得太好了。
--IT人的故事
13. Re:ICP算法（Iterative Closest Point迭代最近点算法）
通俗易懂，看完原理就知道是怎么一回事了d=====(￣▽￣*)b
--Kinsley
14. Re:交叉验证 Cross-validation
讲的很好，感谢
--代码演奏家
15. Re:交叉验证 Cross-validation
作者讲得非常通俗易懂，感谢~~~
--七木的快乐
16. Re:史密斯（smith）圆图讲解
讲得太生动了，容易理解，对我帮助很大
--柚子520
17. Re:Xen虚拟化基本原理详解
@volcanol您好，我这里没有过这方面的案例。...
--stardsd
18. Re:Xen虚拟化基本原理详解
你好，我想问一下，虚拟化在实际的工业环境中是否可行，您有没有真实的案例。因为我这边有一些工控服务器是好久以前的计算机了，现在根本买不到设备，备份的数据还原到新的机器上根本允许不起来，一启动就蓝屏死机。......
--volcanol
19. Re:NetFPGA
@考拉小无stardsd@163.com欢迎相互学习交流...
--stardsd
20. Re:NetFPGA
您好，博主，请问有还有研究相关开发，可否能留个联系方式，有问题想请教一下您。
--考拉小无
21. Re:区块链（Blockchain）
@海与博您好，我暂时还没有这方面的打算，谢谢。...
--stardsd
22. Re:区块链（Blockchain）
您好，我们正在寻找区块链人才加入我们团队，您考虑做技术顾问吗，如果考虑请联系张先生，电话：13699209198
--海与博
23. Re:通俗理解卷积神经网络
@ffl: )...
--stardsd
24. Re:通俗理解卷积神经网络
动图很好理解：）
--ffl
25. Re:齐次坐标的理解
来自“知乎”
--stardsd
26. Re:使用 Socket 通信实现 FTP 客户端程序（来自IBM）
--stardsd
27. Re:支持向量机通俗导论（理解SVM的三层境界）
@
=38782399
--stardsd
28. Re:支持向量机通俗导论（理解SVM的三层境界）
=38782399
--stardsd
29. Re:粒度的设计
--stardsd
30. Re:通信复杂度问题
Charles为什么对于partial函数，量子系统可以指数级的缩减发送bit？2008年9月19日zhiqiang 我写得不准确，不是可以，而是可能可以指数级缩减发送的bit数量。这是因为人们.........
--stardsd
31. Re:欧几里德与扩展欧几里德算法 Extended Euclidean algorithm
--stardsd
32. Re:网桥和交换机的工作原理及区别
网桥不能隔离广播域
--yufei_zhang
阅读排行榜
1. 准确率(Accuracy), 精确率(Precision), 召回率(Recall)和F1-Measure(88296)
2. C语言字符串与数字相互转换(56918)
3. 二维码详解（QR Code）(25271)
4. 归一化方法 Normalization Method(19798)
5. 柯尔莫可洛夫-斯米洛夫检验（Kolmogorov–Smirnov test，K-S test）(19105)
6. P值(P-value)，“差异具有显著性”和“具有显著差异”(18095)
7. 帧、报文、报文段、分组、包、数据报的概念区别(16440)
8. FCM聚类算法介绍(14744)
9. 深入理解拉格朗日乘子法（Lagrange Multiplier) 和KKT条件(14358)
10. 交叉验证 Cross-validation(14354)
11. 启发式算法（Heuristic Algorithm）(14077)
12. 史密斯（smith）圆图讲解(12297)
13. linux的chmod,chown命令详解(11374)
14. LTE中的各种ID含义(9257)
15. SSH登录之后运行命令报错的解决办法-- Failed to connect to Mir: Failed to connect to server socket: No such file or directory(9115)
16. SNMP 原理与实战详解(8607)
17. MATLAB中的set函数(7531)
18. PKI系统深入介绍(7384)
19. 矩阵与行列式的几何意义(6982)
20. ICP算法（Iterative Closest Point迭代最近点算法）(6695)
21. EndNote在Word中插入文献不能自动生成编号 - 解决方案(6274)
22. DNS资源纪录(Resource Record)介绍(6077)
23. Xen虚拟化基本原理详解(5238)
24. 网格搜索（参数选择）(5144)
25. 关于拉格朗日乘子法和KKT条件(5049)
26. 5G系统架构(4767)
27. C语言文件的读写(4660)
28. Trilateration三边测量定位算法(4266)
29. MATLAB中白噪声的WGN和AWGN函数的使用(4256)
30. JPEG文件格式介绍(4255)
31. 从随机过程到马尔科夫链蒙特卡洛方法（MCMC）(4210)
32. 排队论模型(4062)
33. 操作系统的启动与引导问题 BIOS、UEFI、MBR、GPT(3692)
34. 在传统以太网中,为什么要有最小帧长度和最大帧长度的限制(3682)
35. Linux主分区，扩展分区，逻辑分区的联系和区别(3629)
36. BGP--边界网关协议(3582)
37. 手机信号强度单位dB、dBm和asu(3515)
38. NDT（Normal Distribution Transform） 算法（与ICP对比）和一些常见配准算法(3315)
39. 了解半变异函数：变程、基台和块金(3106)
40. 齐次坐标的理解(3037)
评论排行榜
1. ICP算法（Iterative Closest Point迭代最近点算法）(5)
2. 二维码详解（QR Code）(3)
3. 支持向量机通俗导论（理解SVM的三层境界）(2)
4. 交叉验证 Cross-validation(2)
5. NetFPGA(2)
6. 通俗理解卷积神经网络(2)
7. 区块链（Blockchain）(2)
8. Xen虚拟化基本原理详解(2)
9. 史密斯（smith）圆图讲解(2)
10. 使用 Socket 通信实现 FTP 客户端程序（来自IBM）(1)
11. Git: Push rejected 的解决方案(1)
12. Statistical Artifact (error)(1)
13. 服务器三大体系SMP、NUMA、MPP介绍(1)
14. 网桥和交换机的工作原理及区别(1)
15. 齐次坐标的理解(1)
16. 粒度的设计(1)
17. 通信复杂度问题(1)
18. 欧几里德与扩展欧几里德算法 Extended Euclidean algorithm(1)
19. 么正矩阵(酉矩阵)(1)
推荐排行榜
1. 准确率(Accuracy), 精确率(Precision), 召回率(Recall)和F1-Measure(4)
2. 启发式算法（Heuristic Algorithm）(3)
3. 如何书写高效的工作邮件：给你十条建议(3)
4. C语言字符串与数字相互转换(3)
5. 交叉验证 Cross-validation(2)
6. 二维码详解（QR Code）(2)
7. 史密斯（smith）圆图讲解(2)
8. ICP算法（Iterative Closest Point迭代最近点算法）(2)
9. 深入理解拉格朗日乘子法（Lagrange Multiplier) 和KKT条件(2)
10. C-RAN 集中化、协作化、云化、绿色节能（4C）(1)
11. minHash最小哈希原理(1)
12. C语言函数sscanf()的用法(1)
13. Myeclipse 2015 stable 2.0 完美破解方法(1)
14. 帧、报文、报文段、分组、包、数据报的概念区别(1)
15. 网络编码(1)
16. 博士生传给硕士生的经验(1)
17. 中继器、集线器(HUB)、网桥、交换机、路由器比较(1)
18. 卷积码(1)
19. 数学系教材推荐(1)
20. CloudSim介绍和使用(1)
21. 遗传算法简介(1)
22. P值(P-value)，“差异具有显著性”和“具有显著差异”(1)
23. DBSCAN算法(1)
24. 聚类：层次聚类、基于划分的聚类（k-means）、基于密度的聚类、基于模型的聚类(1)
25. 钻石问题（菱形继承问题） 和虚继承(1)
26. 10 Big Data Possibilities for 2017 Based on Oracle's Predictions(1)
27. FCM聚类算法介绍(1)
28. 归一化方法 Normalization Method(1)
29. 区块链（Blockchain）(1)
30. 语义网 （Semantic Web）和 web 3.0(1)
31. Euler-Maruyama discretization（"欧拉-丸山"数值解法）(1)
Copyright ©2018 stardsd
